options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
setwd("~/Documents/uni/FIB-ADEI-LAB/deliverable1")
#setwd("C:/Users/Claudia Sánchez/Desktop/FIB/TARDOR 2020-2021/ADEI/DELIVERABLE1/FIB-ADEI-LAB/deliverable1")
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Chunk 3
if(!is.null(dev.list())) dev.off()  # Clear plots
rm(list=ls())                       # Clean workspace
# Chunk 4
setwd("~/Documents/uni/FIB-ADEI-LAB/deliverable1")
filepath<-"~/Documents/uni/FIB-ADEI-LAB/deliverable1"
#setwd("C:/Users/Claudia Sánchez/Desktop/FIB/TARDOR 2020-2021/ADEI/DELIVERABLE1/FIB-ADEI-LAB/deliverable1")
#filepath<-"C:/Users/Claudia Sánchez/Desktop/FIB/TARDOR 2020-2021/ADEI/DELIVERABLE1/FIB-ADEI-LAB/deliverable1"
df<-read.table(paste0(filepath,"/green_tripdata_2016-01.csv"),header=T, sep=",")
dim(df)       # Displays the sample size
names(df)     # Displays the names of the sample variables
summary(df)
# Chunk 5
set.seed(180998)
sam<-as.vector(sort(sample(1:nrow(df),5000)))
# Chunk 6
head(df)
df<-df[sam,]
summary(df)
# Chunk 7
save.image("Taxi5000_raw.RData")
# Chunk 8
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
# Chunk 9
imis<-rep(0,nrow(df))  # rows - trips
jmis<-rep(0,2*ncol(df))  # columns - variables
mis1<-countNA(df)
imis<-mis1$mis_ind
# mis1$mis_col # Number of missings for the current set of variables
iouts<-rep(0,nrow(df))  # rows - trips
jouts<-rep(0,2*ncol(df))  # columns - variables
ierrs<-rep(0,nrow(df))  # rows - trips
jerrs<-rep(0,2*ncol(df))  # columns - variables
# Chunk 10
summary(df)
names(df)
# Chunk 11
df$VendorID<-factor(df$VendorID,labels=c("Mobile","VeriFone"))
nlevels(df$VendorID)
levels(df$VendorID)<-paste0("f.Vendor-",levels(df$VendorID))
summary(df$VendorID)
barplot(summary(df$VendorID),main="VendorID Barplot",col = "DarkSlateBlue")
# Chunk 12
summary(df$RateCodeID)
df$RateCodeID<-factor(df$RateCodeID)
barplot(summary(df$RateCodeID),main="RateCodeID Barplot",col = "DarkSlateBlue")
# Chunk 13
df$f.Rate<-1  # rep(1,nrow(df))
ll<-which(df$RateCodeID != "1");length(ll)
df$f.Rate[ll]<-2
df$f.Rate<-factor(df$f.Rate,levels=1:2,labels=c("f.Rate-1","f.Rate-Other"))
barplot(summary(df$f.Rate),main="RateCodeID Barplot",col = "DarkSlateBlue")
# Now is more balanced.
# Chunk 14
summary(df$Store_and_fwd_flag)
df$Store_and_fwd_flag<-factor(df$Store_and_fwd_flag)
barplot(summary(df$Store_and_fwd_flag),main="Store_and_fwd_flag Barplot",col = "DarkSlateBlue")
# Chunk 15
df$Payment_type<-factor(df$Payment_type,labels=c("Credit card","Cash","No charge","Dispute"))
summary(df$Payment_type)
barplot(summary(df$Payment_type),main="Payment_type Barplot",col = "DarkSlateBlue")
# Chunk 16
levels(df$Payment_type) <- c("Credit card","Cash","No paid","No paid")
summary(df$Payment_type)
barplot(summary(df$Payment_type),main="Payment_type Barplot",col = "DarkSlateBlue")
# Chunk 17
df$Trip_type<-factor(df$Trip_type,labels=c("Street-Hail","Dispatch"))
barplot(summary(df$Trip_type),main="Trip_type Barplot",col = "DarkSlateBlue")
summary(df$Trip_type)
# Chunk 18
df$pickup<-substr(strptime(df$lpep_pickup_datetime, "%Y-%m-%d %H:%M:%S"), 12, 13)
# table(df$pickup)
# Chunk 19
df$dropoff<-substr(strptime(df$Lpep_dropoff_datetime, "%Y-%m-%d %H:%M:%S"), 12, 13)
# table(df$pickup)
# Chunk 20
summary(df$Passenger_count)
# Chunk 21
sel<-which(df$Passenger_count == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[10]<-length(sel)
# sel
# Chunk 22
df[sel,"Passenger_count"]<-NA
# Chunk 23
df$Passenger_count<-factor(df$Passenger_count)
# Chunk 24
barplot(table(df$Passenger_count),main="Passenger_count Barplot",col = "DarkSlateBlue")
# Chunk 25
summary(df$Trip_distance)
# Chunk 26
Boxplot(df$Trip_distance)
var_out<-calcQ(df$Trip_distance)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=30,col="blue",lwd=2)
llout<-which(df$Trip_distance>30)
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[11]<-length(llout)
# Chunk 27
sel<-which(df$Trip_distance <= 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[11]<-length(sel)
# sel
# Chunk 28
setNA<-which((df$Trip_distance<=0) | (df$Trip_distance > 30))
df[setNA,"Trip_distance"]<-NA
# Chunk 29
df$Trip_distance_range[df$Trip_distance <= 2.5] = "Short_dist"
df$Trip_distance_range[(df$Trip_distance > 2.5) & (df$Trip_distance <= 5)] = "Medium_dist"
df$Trip_distance_range[df$Trip_distance > 5] = "Long_dist"
summary(df$Trip_distance_range)
# Chunk 30
df$Trip_distance_range <- factor(df$Trip_distance_range)
# Chunk 31
barplot(table(df$Trip_distance_range),main="Trip_distance_range Barplot",col = "DarkSlateBlue")
# Chunk 32
summary(df$Pickup_longitude)
# Chunk 33
sel<-which(df$Pickup_longitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[6]<-length(sel)
# sel
# Chunk 34
df[sel,"Pickup_longitude"]<-NA
# Chunk 35
llout <-which((df$Pickup_longitude < -74.02) | (df$Pickup_longitude > -73.80))
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[6]<-length(llout)
# Chunk 36
#
df[llout,"Pickup_longitude"]<-NA
# Chunk 37
summary(df$Pickup_latitude)
# Chunk 38
sel<-which(df$Pickup_latitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[7]<-length(sel)
# sel
# Chunk 39
df[sel,"Pickup_longitude"]<-NA
# Chunk 40
llout <-which((df$Pickup_latitude < 40.54) | (df$Pickup_latitude > 40.86))
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[7]<-length(llout)
# Chunk 41
df[llout,"Pickup_latitude"]<-NA
# Chunk 42
summary(df$Dropoff_longitude)
# Chunk 43
sel<-which(df$Dropoff_longitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[8]<-length(sel)
# sel
# Chunk 44
df[sel,"Dropoff_longitude"]<-NA
# Chunk 45
llout <-which((df$Dropoff_longitude < -74.02) | (df$Dropoff_longitude > -73.80))
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[8]<-length(llout)
# llout
# Chunk 46
df[llout,"Dropoff_longitude"]<-NA
# Chunk 47
summary(df$Dropoff_latitude)
# Chunk 48
sel<-which(df$Dropoff_latitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[8]<-length(sel)
# sel
# Chunk 49
df[sel,"Dropoff_latitude"]<-NA
# Chunk 50
llout <-which((df$Dropoff_latitude < 40.54) | (df$Dropoff_latitude > 40.86))
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[9]<-length(llout)
# llout
# Chunk 51
df[llout,"Dropoff_latitude"]<-NA
# Chunk 52
summary(df$Fare_amount)
# df[which(df[,"Fare_amount"]<0),]
# Chunk 53
sel<-which(df$Fare_amount <= 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[12]<-length(sel)
# sel
# Chunk 54
df[sel,"Fare_amount"]<-NA
# Chunk 55
Boxplot(df$Fare_amount)
var_out<-calcQ(df$Fare_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=60,col="blue",lwd=2)
# Chunk 56
llout<-which(df$Fare_amount>60)
iouts[llout]<-iouts[llout]+1
jouts[12]<-length(llout)
df[llout,"Fare_amount"]<-NA
# llout
# Chunk 57
summary(df$Extra)
# Chunk 58
table(df$Extra)
# Chunk 59
# df[which(df[, "Extra"] < 0),]
sel<-which(df$Extra < 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[13]<-length(sel)
df[sel,"Extra"]<-NA
# sel
# Chunk 60
summary(df$MTA_tax)
# df[which(df[, "MTA_tax"] != 0.50),]
# Chunk 61
sel<-which(df$MTA_tax != 0.50)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[14]<-length(sel)
df[sel,"MTA_tax"]<-NA
# sel
# Chunk 62
summary(df$MTA_tax)
# Chunk 63
summary(df$improvement_surcharge)
table(df$improvement_surcharge)
# Chunk 64
df$yearGt2015[(df$lpep_pickup_datetime >= "2015-01-01 00:00:00") & (df$improvement_surcharge == 0.3)] = 1
df$yearGt2015[(df$lpep_pickup_datetime < "2015-01-01 00:00:00") | (df$improvement_surcharge != 0.3)] = 0
table(df$yearGt2015)
# Chunk 65
sel<-which(df$improvement_surcharge <= 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[18]<-length(sel)
df[sel,"improvement_surcharge"]<-NA
# sel
# Chunk 66
summary(df$Ehail_fee)
# Chunk 67
summary(df$Tip_amount)
# Chunk 68
df$CashTips[(df$Tip_amount > 0) & (df$Payment_type == "Cash")] = 1
df$CashTips[(df$Payment_type == "Credit card")] = 0
table(df$CashTips)
# Chunk 69
Boxplot(df$Tip_amount)
var_out<-calcQ(df$Tip_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=17,col="blue",lwd=2)
llout<-which(df$Tip_amount>17)
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[15]<-length(llout)
df[llout,"Tip_amount"]<-NA
# llout
# Chunk 70
summary(df$Tolls_amount)
# Chunk 71
Boxplot(df$Tolls_amount)
var_out<-calcQ(df$Tolls_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
table(df$Tolls_amount)
# Chunk 72
llout<-which(df$Tolls_amount>0)
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[16]<-length(llout)
df[llout,"Tolls_amount"]<-NA
# llout
# Chunk 73
summary(df$Total_amount)
# Chunk 74
df$Sum_total_amount = (df$Fare_amount + df$Extra + df$MTA_tax + df$improvement_surcharge + df$Tip_amount + df$Tolls_amount)
sel<-which((df$Total_amount != df$Sum_total_amount) | (df$Total_amount<0))
# names(df)
if (length(sel)>0) {
ierrs[sel]<-ierrs[sel]+1
jerrs[19]<-length(sel)
}
# sel
df[sel,"Total_amount"]<-NA
# Chunk 75
Boxplot(df$Total_amount)
var_out<-calcQ(df$Total_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=90,col="blue",lwd=2)
llout<-which(df$Total_amount>90)
iouts[llout]<-iouts[llout]+1
jouts[19]<-length(llout)
df[llout,"Total_amount"]<-NA
# Chunk 76
missings_ranking_sortlist <- sort.list(mis1$mis_col, decreasing = TRUE)
for (j in missings_ranking_sortlist) {
print(paste(names(df)[j], " : ", mis1$mis_col$mis_x[j]))
}
# Chunk 77
errors_ranking_sortlist <- sort.list(jerrs, decreasing = TRUE)
for (j in errors_ranking_sortlist) {
if(!is.na(names(df)[j])) { print(paste(names(df)[j], " : ", jerrs[j])) }
}
# Chunk 78
errors_ranking_sortlist <- sort.list(jouts, decreasing = TRUE)
for (j in errors_ranking_sortlist) {
if(!is.na(names(df)[j])) print(paste(names(df)[j], " : ", jouts[j]))
}
# Chunk 79
# table(imis)
barplot(table(imis),main="Missings per individual Barplot",col = "DarkSlateBlue")
# Chunk 80
# table(ierrs)
barplot(table(ierrs),main="Errors per individual Barplot",col = "DarkSlateBlue")
# Chunk 81
# table(iouts)
barplot(table(iouts),main="Outliers per individual Barplot",col = "DarkSlateBlue")
# Chunk 82
total_missings <- 0; total_outliers <- 0; total_errors <- 0;
for (m in imis) {total_missings <- total_missings + m}; total_missings
for (o in iouts) {total_outliers <- total_outliers + o}; total_outliers
for (e in ierrs) {total_errors <- total_errors + e}; total_errors
library(missMDA)
vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=4)
vars_quantitatives<-names(df)[c(6:9)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=4)
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
res.imputation
vars_quantitatives<-names(df)[c(6:9, 11:16)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
vars_quantitatives<-names(df)[c(6:9, 11)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
vars_quantitatives<-names(df)[c(6:9, 11:12)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
vars_quantitatives<-names(df)[c(6:9, 11:13)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
vars_quantitatives<-names(df)[c(6:9, 11:14)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
vars_quantitatives<-names(df)[c(6:9, 11:13)]
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
names(df)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15)]
# no li mola MTA_tax (14)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15:16)]
# no li mola MTA_tax (14)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15)]
# no li mola MTA_tax (14)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
names(df)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15, 18)]
# no li mola MTA_tax (14), ni Tolls_amount(16)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
names(df)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15, 19)]
# no li mola MTA_tax (14), ni Tolls_amount(16), ni improvement_surcharge(18)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=3)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15, 19)]
# no li mola MTA_tax (14), ni Tolls_amount(16), ni improvement_surcharge(18)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=4)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15, 19)]
# no li mola MTA_tax (14), ni Tolls_amount(16), ni improvement_surcharge(18)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=5)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15, 19)]
# no li mola MTA_tax (14), ni Tolls_amount(16), ni improvement_surcharge(18)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=6)
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=5)
attributes(res.imputation)
summary(res.impn$completeObs) 
summary(res.imputation$completeObs) 
summary(res.imputation$completeObs)
# summary(res.imputation$completeObs)
df[,"Pickup_longitude"] <- res.impn$completeObs[,"Pickup_longitude"] 
# summary(res.imputation$completeObs)
df[,"Pickup_longitude"] <- res.imputation$completeObs[,"Pickup_longitude"] 
res.imputation$completeObs
# summary(res.imputation$completeObs)
df[,"Pickup_longitude"] <- res.imputation$completeObs[,"Pickup_longitude"]
df[,"Pickup_latitude"] <- res.imputation$completeObs[,"Pickup_latitude"]
df[,"Dropoff_longitude"] <- res.imputation$completeObs[,"Dropoff_longitude"]
df[,"Dropoff_latitude"] <- res.imputation$completeObs[,"Dropoff_latitude"]
df[,"Trip_distance"] <- res.imputation$completeObs[,"Trip_distance"]
df[,"Fare_amount"] <- res.imputation$completeObs[,"Fare_amount"]
df[,"Extra"] <- res.imputation$completeObs[,"Extra"]
df[,"Tip_amount"] <- res.imputation$completeObs[,"Tip_amount"]
df[,"Total_amount"] <- res.imputation$completeObs[,"Total_amount"]
df[,"Pickup_longitude"]
summary(res.input$completeObs)
# vars_quantitatives<-names(df)[c(6:9, 11:16, 18:19)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15, 19)]
# no li mola MTA_tax (14), ni Tolls_amount(16), ni improvement_surcharge(18)
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=5)
summary(res.imputation$completeObs)
par(mfrow=c(14, 16, 18))
par(mfrow=c(1,3))
par(mfrow=c(1,3))
hist(df$Pickup_longitude,col="red")
hist(df$Dropoff_longitude,col="green")
hist(res.imputation$completeObs[,2],col="blue")
hist(res.imputation$completeObs[,4],col="blue")
hist(res.imputation$completeObs[,6],col="blue")
hist(res.imputation$completeObs[,8],col="blue")
hist(res.imputation$completeObs[,3],col="blue")
hist(res.imputation$completeObs[,19],col="blue")
vars_categorical<-names(df)[c(1,4, 20:25)] # Passenger_count_categorical!!!
vars_categorical
vars_categorical
vars_categorical<-names(df)[c(1,4, 20:25)] # Passenger_count_categorical!!!
summary(df[,vars_categorical])
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(1,4)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(1,4, 20:25)] # Passenger_count_categorical!!!
summary(df[,vars_categorical])
vars_categorical<-names(df)[c(1)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(1, 4)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(1, 10)]
vars_categorical<-names(df)[c(1, 20)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(4, 20)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(1, 21)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(4, 21)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(20, 21)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
vars_categorical<-names(df)[c(20:25)]
nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
