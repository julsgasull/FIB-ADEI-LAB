df$period[df$hour>10]<-3
df$period[df$hour>16]<-4
df$period[df$hour>19]<-1
df$period<-factor(df$period,labels=paste("Period",c("night","morning","valley","afternoon")))
barplot(summary(df$period),main="period Barplot",col = "DarkSlateBlue")
# Chunk 12
df$VendorID<-factor(df$VendorID,labels=c("Mobile","VeriFone"))
# nlevels(df$VendorID)
levels(df$VendorID)<-paste0("f.Vendor-",levels(df$VendorID))
# summary(df$VendorID)
barplot(summary(df$VendorID),main="VendorID Barplot",col = "DarkSlateBlue")
# Chunk 13
# summary(df$RateCodeID)
df$RateCodeID<-factor(df$RateCodeID)
barplot(summary(df$RateCodeID),main="RateCodeID Barplot",col = "DarkSlateBlue")
# Chunk 14
df$RateCodeID[df$RateCodeID != 1] = 2
df$RateCodeID <- factor(df$RateCodeID, labels =c("Rate-1","Rate-Other"))
barplot(summary(df$RateCodeID),main="RateCodeID Barplot",col = "DarkSlateBlue")
# Chunk 15
# summary(df$Store_and_fwd_flag)
df$Store_and_fwd_flag<-factor(df$Store_and_fwd_flag)
barplot(summary(df$Store_and_fwd_flag),main="Store_and_fwd_flag Barplot",col = "DarkSlateBlue")
# Chunk 16
df$Payment_type<-factor(df$Payment_type,labels=c("Credit card","Cash","No charge","Dispute"))
# summary(df$Payment_type)
barplot(summary(df$Payment_type),main="Payment_type Barplot",col = "DarkSlateBlue")
# Chunk 17
levels(df$Payment_type) <- c("Credit card","Cash","No paid","No paid")
# summary(df$Payment_type)
barplot(summary(df$Payment_type),main="Payment_type Barplot",col = "DarkSlateBlue")
# Chunk 18
df$Trip_type<-factor(df$Trip_type,labels=c("Street-Hail","Dispatch"))
barplot(summary(df$Trip_type),main="Trip_type Barplot",col = "DarkSlateBlue")
# summary(df$Trip_type)
# Chunk 19
df$tlenkm<-df$Trip_distance*1.609344 # Miles to km
# Chunk 20
df$traveltime<-(as.numeric(as.POSIXct(df$Lpep_dropoff_datetime)) - as.numeric(as.POSIXct(df$lpep_pickup_datetime)))/60
# Chunk 21
df$espeed<-(df$tlenkm/(df$traveltime))*60
# Chunk 22
sel<-which(is.na(df$espeed<=0)) #;length(sel)
#imis[sel]<-imis[sel]+1
#jmis[26]<-length(sel)
# Chunk 23
summary(df$espeed)
sel<-which((df$espeed<=0)|(df$espeed=="Inf"))
ierrs[sel]<-ierrs[sel]+1
jerrs[26]<-length(sel)
# sel
# Chunk 24
df[sel,"espeed"]<-NA
# Chunk 25
# summary(df$espeed)
calcQ(df$espeed)
# Chunk 26
Boxplot(df$espeed)
var_out<-calcQ(df$espeed)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$espeed<=3)|(df$espeed>80))
iouts[llout]<-iouts[llout]+1
jouts[26]<-length(llout)
df[llout,"espeed"]<-NA
# Chunk 27
df$pickup<-substr(strptime(df$lpep_pickup_datetime, "%Y-%m-%d %H:%M:%S"), 12, 13) # table(df$pickup)
# Chunk 28
df$dropoff<-substr(strptime(df$Lpep_dropoff_datetime, "%Y-%m-%d %H:%M:%S"), 12, 13) # table(df$pickup)
# Chunk 29
summary(df$Passenger_count)
# Chunk 30
sel<-which(df$Passenger_count == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[10]<-length(sel)
# sel
# Chunk 31
df[sel,"Passenger_count"]<-NA
# Chunk 32
df$passenger_groups[df$Passenger_count == 1] = "Single"
df$passenger_groups[df$Passenger_count == 2] = "Couple"
df$passenger_groups[df$Passenger_count >= 3] = "Group"
df$passenger_groups <- factor(df$passenger_groups)
# Chunk 33
barplot(table(df$passenger_groups),main="passenger_groups Barplot",col = "DarkSlateBlue")
# Chunk 34
summary(df$Trip_distance)
# Chunk 35
Boxplot(df$Trip_distance)
var_out<-calcQ(df$Trip_distance)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=30,col="blue",lwd=2)
llout<-which(df$Trip_distance>30)
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[11]<-length(llout)
# Chunk 36
sel<-which(df$Trip_distance <= 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[11]<-length(sel)
# sel
# Chunk 37
setNA<-which((df$Trip_distance<=0) | (df$Trip_distance > 30))
df[setNA,"Trip_distance"]<-NA
# Chunk 38
df$Trip_distance_range[df$Trip_distance <= 2.5] = "Short_dist"
df$Trip_distance_range[(df$Trip_distance > 2.5) & (df$Trip_distance <= 5)] = "Medium_dist"
df$Trip_distance_range[df$Trip_distance > 5] = "Long_dist"
# summary(df$Trip_distance_range)
# Chunk 39
df$Trip_distance_range <- factor(df$Trip_distance_range)
# Chunk 40
barplot(table(df$Trip_distance_range),main="Trip_distance_range Barplot",col = "DarkSlateBlue")
# Chunk 41
summary(df$Pickup_longitude)
# Chunk 42
sel<-which(df$Pickup_longitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[6]<-length(sel)
# sel
# Chunk 43
df[sel,"Pickup_longitude"]<-NA
# Chunk 44
llout <-which((df$Pickup_longitude < -74.02) | (df$Pickup_longitude > -73.80))
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[6]<-length(llout)
# Chunk 45
df[llout,"Pickup_longitude"]<-NA
# Chunk 46
summary(df$Pickup_latitude)
# Chunk 47
sel<-which(df$Pickup_latitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[7]<-length(sel)
# sel
# Chunk 48
df[sel,"Pickup_longitude"]<-NA
# Chunk 49
llout <-which((df$Pickup_latitude < 40.54) | (df$Pickup_latitude > 40.86))
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[7]<-length(llout)
# Chunk 50
df[llout,"Pickup_latitude"]<-NA
# Chunk 51
summary(df$Dropoff_longitude)
# Chunk 52
sel<-which(df$Dropoff_longitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[8]<-length(sel)
# sel
# Chunk 53
df[sel,"Dropoff_longitude"]<-NA
# Chunk 54
llout <-which((df$Dropoff_longitude < -74.02) | (df$Dropoff_longitude > -73.80))
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[8]<-length(llout)
# llout
# Chunk 55
df[llout,"Dropoff_longitude"]<-NA
# Chunk 56
summary(df$Dropoff_latitude)
# Chunk 57
sel<-which(df$Dropoff_latitude == 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[8]<-length(sel)
# sel
# Chunk 58
df[sel,"Dropoff_latitude"]<-NA
# Chunk 59
llout <-which((df$Dropoff_latitude < 40.54) | (df$Dropoff_latitude > 40.86))
iouts[llout]<-iouts[llout]+1
#names(df)
jouts[9]<-length(llout)
# llout
# Chunk 60
df[llout,"Dropoff_latitude"]<-NA
# Chunk 61
summary(df$Fare_amount)
# Chunk 62
sel<-which(df$Fare_amount <= 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[12]<-length(sel)
# sel
# Chunk 63
df[sel,"Fare_amount"]<-NA
# Chunk 64
Boxplot(df$Fare_amount)
var_out<-calcQ(df$Fare_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=60,col="blue",lwd=2)
# Chunk 65
llout<-which(df$Fare_amount>60)
iouts[llout]<-iouts[llout]+1
jouts[12]<-length(llout)
df[llout,"Fare_amount"]<-NA
# llout
# Chunk 66
summary(df$Extra)
# Chunk 67
table(df$Extra)
# Chunk 68
# df[which(df[, "Extra"] < 0),]
sel<-which(df$Extra < 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[13]<-length(sel)
df[sel,"Extra"]<-NA
# sel
# Chunk 69
summary(df$MTA_tax)
# df[which(df[, "MTA_tax"] != 0.50),]
# Chunk 70
sel<-which(df$MTA_tax != 0.50)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[14]<-length(sel)
df[sel,"MTA_tax"]<-NA
# sel
# Chunk 71
summary(df$MTA_tax)
# Chunk 72
summary(df$improvement_surcharge)
table(df$improvement_surcharge)
# Chunk 73
df$yearGt2015[(df$lpep_pickup_datetime >= "2015-01-01 00:00:00") & (df$improvement_surcharge == 0.3)] = 1
df$yearGt2015[(df$lpep_pickup_datetime < "2015-01-01 00:00:00") | (df$improvement_surcharge != 0.3)] = 0
table(df$yearGt2015)
# Chunk 74
sel<-which(df$improvement_surcharge <= 0)
ierrs[sel]<-ierrs[sel]+1
# names(df)
jerrs[18]<-length(sel)
df[sel,"improvement_surcharge"]<-NA
# sel
# Chunk 75
summary(df$Ehail_fee)
# Chunk 76
summary(df$Tip_amount)
# Chunk 77
df$CashTips[(df$Tip_amount > 0) & (df$Payment_type == "Cash")] = 1
df$CashTips[(df$Payment_type == "Credit card")] = 0
table(df$CashTips)
# Chunk 78
Boxplot(df$Tip_amount)
var_out<-calcQ(df$Tip_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=17,col="blue",lwd=2)
llout<-which(df$Tip_amount>17)
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[15]<-length(llout)
df[llout,"Tip_amount"]<-NA
# llout
# Chunk 79
summary(df$Tolls_amount)
# Chunk 80
Boxplot(df$Tolls_amount)
var_out<-calcQ(df$Tolls_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
table(df$Tolls_amount)
# Chunk 81
llout<-which(df$Tolls_amount>0)
iouts[llout]<-iouts[llout]+1
# names(df)
jouts[16]<-length(llout)
df[llout,"Tolls_amount"]<-NA
# llout
# Chunk 82
summary(df$Total_amount)
# Chunk 83
df$Sum_total_amount = (df$Fare_amount + df$Extra + df$MTA_tax + df$improvement_surcharge + df$Tip_amount + df$Tolls_amount)
sel<-which((df$Total_amount != df$Sum_total_amount) | (df$Total_amount<0))
# names(df)
if (length(sel)>0) {
ierrs[sel]<-ierrs[sel]+1
jerrs[19]<-length(sel)
}
# sel
df[sel,"Total_amount"]<-NA
# Chunk 84
Boxplot(df$Total_amount)
var_out<-calcQ(df$Total_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=90,col="blue",lwd=2)
llout<-which(df$Total_amount>90)
iouts[llout]<-iouts[llout]+1
jouts[19]<-length(llout)
df[llout,"Total_amount"]<-NA
# Chunk 85
missings_ranking_sortlist <- sort.list(mis1$mis_col, decreasing = TRUE)
for (j in missings_ranking_sortlist) {
print(paste(names(df)[j], " : ", mis1$mis_col$mis_x[j]))
}
# Chunk 86
errors_ranking_sortlist <- sort.list(jerrs, decreasing = TRUE)
for (j in errors_ranking_sortlist) {
if(!is.na(names(df)[j])) { print(paste(names(df)[j], " : ", jerrs[j])) }
}
# Chunk 87
errors_ranking_sortlist <- sort.list(jouts, decreasing = TRUE)
for (j in errors_ranking_sortlist) {
if(!is.na(names(df)[j])) print(paste(names(df)[j], " : ", jouts[j]))
}
# Chunk 88
# table(imis)
barplot(table(imis),main="Missings per individual Barplot",col = "DarkSlateBlue")
# Chunk 89
# table(ierrs)
barplot(table(ierrs),main="Errors per individual Barplot",col = "DarkSlateBlue")
# Chunk 90
# table(iouts)
barplot(table(iouts),main="Outliers per individual Barplot",col = "DarkSlateBlue")
# Chunk 91
total_missings <- 0; total_outliers <- 0; total_errors <- 0;
for (m in imis) {total_missings <- total_missings + m}
for (o in iouts) {total_outliers <- total_outliers + o}
for (e in ierrs) {total_errors <- total_errors + e}
# Chunk 92
total_missings
total_outliers
total_errors
# Chunk 93
library(mvoutlier)
library(FactoMineR)
# Chunk 94
df$number_missings <- 0; df$number_errors <- 0; df$number_outliers <- 0;
#
# imis[1]
#
# for (i in 1:imis) {df$number_missings[i] <- imis[i]}
# for (i in 1:iouts) {df$number_errors[i] <- iouts[i]}
# for (i in 1:ierrs) {df$number_outliers[i] <- ierrs[i]}
# Chunk 95
# condes(df, )
# condes(df, total_outliers)
# condes(df, total_errors)
# Chunk 96
# TO-DO!!
# Chunk 97
# TO-DO!!
# Chunk 98
# TO-DO!!
# Chunk 99
# TO-DO!!
# Chunk 100
library(missMDA)
# Chunk 101
# #vars_quantitatives<-names(df)[c(6:16, 18:19,27)]
vars_quantitatives<-names(df)[c(6:9, 11:13, 15, 19,26)]
# we do not include MTA_tax (14), Tolls_amount(16) nor improvement_surcharge(18)
summary(df[,vars_quantitatives])
# res.imputation<-imputePCA(df[,vars_quantitatives],ncp=5)
# summary(res.imputation$completeObs)
# Chunk 102
# summary(res.imputation$completeObs)
# df[,"Pickup_longitude"] <- res.imputation$completeObs[,"Pickup_longitude"]
# df[,"Pickup_latitude"] <- res.imputation$completeObs[,"Pickup_latitude"]
# df[,"Dropoff_longitude"] <- res.imputation$completeObs[,"Dropoff_longitude"]
# df[,"Dropoff_latitude"] <- res.imputation$completeObs[,"Dropoff_latitude"]
# df[,"Trip_distance"] <- res.imputation$completeObs[,"Trip_distance"]
# df[,"Fare_amount"] <- res.imputation$completeObs[,"Fare_amount"]
# df[,"Extra"] <- res.imputation$completeObs[,"Extra"]
# df[,"Tip_amount"] <- res.imputation$completeObs[,"Tip_amount"]
# df[,"Total_amount"] <- res.imputation$completeObs[,"Total_amount"]
# df[,"espeed"] <- res.imputation$completeObs[,"espeed"]
# Chunk 103
# vars_categorical<-names(df)[c(1,4,5,20,21,23,29,30)]
# summary(df[,vars_categorical])
# nb <- estim_ncpMCA(df[, vars_categorical],ncp.max=25)
# res.input<-imputeMCA(df[,vars_categorical],ncp=10)
# summary(res.input$completeObs)
# Chunk 104
# summary(res.input$completeObs)
# df[,"VendorID"] <- res.input$completeObs[,"VendorID"]
# df[,"Store_and_fwd_flag"] <- res.input$completeObs[,"Store_and_fwd_flag"]
# df[,"RateCodeID"] <- res.input$completeObs[,"RateCodeID"]
# df[,"Payment_type"] <- res.input$completeObs[,"Payment_type"]
# df[,"Trip_type"] <- res.input$completeObs[,"Trip_type"]
# df[,"period"] <- res.input$completeObs[,"period"]
# df[,"passenger_groups"] <- res.input$completeObs[,"passenger_groups"]
# df[,"Trip_distance_range"] <- res.input$completeObs[,"Trip_distance_range"]
library(FactoMineR)
library(mvoutlier)
summary(df[,vars_quantitatives])
condes(df, which(names(df) == "Total_amount"))
Y.bin
--------------------------------------------------------------------------------
### Identify individuals considered as multivariant outliers
```{r}
#library(chemometrics)
#multivariant_outliers <- Moutlier(df[, c(11:12, 19)], quantile = 0.995)
View(df)
df$With_tip <- 0
for(i in 1:df$Tip_amount) {
if(df$Tip_amount[i] > 0) df$With_tip[i] <- "Y"
else df$With_tip[i] <- "N"
}
df$With_tip <- 0
for(i in 1:df) {
if(df$Tip_amount[i] > 0) df$With_tip[i] <- "Y"
else df$With_tip[i] <- "N"
}
df$With_tip <- 0
for(i in 1:5000) {
if(df$Tip_amount[i] > 0) df$With_tip[i] <- "Y"
else df$With_tip[i] <- "N"
}
df$With_tip <- 0
for(i in 1:5000) {
if(df$Tip_amount[i] > 0) df$With_tip[i] <- "Y"
else df$With_tip[i] <- "N"
}
df$With_tip <- 0
for(i in 1:5000) {
if(df$Tip_amount[i] > 0) df$With_tip[i] <- TRUE
else df$With_tip[i] <- FALSE
}
df$With_tip <- 0
for(i in 1:5) {
print(df$Tip_amount[i])
# if(df$Tip_amount[i] > 0) df$With_tip[i] <- TRUE
# else df$With_tip[i] <- FALSE
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:5000) {
print(df$Tip_amount[i])
if(df$Tip_amount[i] > 0) { df$With_tip[i] <- TRUE }
else { df$With_tip[i] <- FALSE }
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:5) {
print(df$Tip_amount[i])
print(df$Tip_amount[i] > 0)
#if(df$Tip_amount[i] > 0) { df$With_tip[i] <- TRUE }
#else { df$With_tip[i] <- FALSE }
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:5) {
print(df$Tip_amount[i] > 0)
#if(df$Tip_amount[i] > 0) { df$With_tip[i] <- TRUE }
#else { df$With_tip[i] <- FALSE }
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:5) {
print(df$Tip_amount[i] > 0)
if(df$Tip_amount[i]>0) print(TRUE)
#{ df$With_tip[i] <- TRUE }
#else { df$With_tip[i] <- FALSE }
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:5) {
#print(df$Tip_amount[i] > 0)
if(df$Tip_amount[i]>0) print(TRUE)
#{ df$With_tip[i] <- TRUE }
#else { df$With_tip[i] <- FALSE }
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:5) {
if(df$Tip_amount[i]>0) {df$With_tip[i] <- "Y"}
else { df$With_tip[i] <- "N" }
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:nrow(df)) {
if(df$Tip_amount[i]>0) {df$With_tip[i] <- "Y"}
else { df$With_tip[i] <- "N" }
}
df$With_tip <- rep(0,nrow(df))
for(i in 1:nrow(df)) {
if (!is.na(df$Tip_amount[i]) && df$Tip_amount[i]>0) {df$With_tip[i] <- "Y"}
else { df$With_tip[i] <- "N" }
}
df$Given_tip <- rep(0,nrow(df))
for(i in 1:nrow(df)) {
if (!is.na(df$Tip_amount[i]) && df$Tip_amount[i]>0) {df$Given_tip[i] <- TRUE}
else { df$Given_tip[i] <- FALSE }
}
df$Given_tip<-factor(df$Given_tip)
summary(df$Given_tip)
levels(df$Given_tip)<-paste("Y_",sep="",levels(df$Given_tip))
summary(df$Given_tip)
df$Given_tip<-factor(df$Given_tip)
levels(df$Given_tip)<-paste("Y_",sep="",levels(df$Given_tip))
summary(df$Given_tip)
barplot(summary(df$Given_tip),main="Y Barplot",col = "turquoise")
df$Given_tip <- rep(0,nrow(df))
for(i in 1:nrow(df)) {
if (!is.na(df$Tip_amount[i]) && df$Tip_amount[i]>0) {df$Given_tip[i] <- TRUE}
else { df$Given_tip[i] <- FALSE }
}
df$Given_tip<-factor(df$Given_tip,labels=c("Yes","No"))
summary(df$Given_tip)
barplot(summary(df$Given_tip),main="Y Barplot",col = "turquoise")
names(df)
names(df)
df_catdes<-df[c(1:37)]
catdes(df_catdes,37)
condes(df, which(names(df) == "Total_amount"))
