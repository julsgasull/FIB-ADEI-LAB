if (length(sel)>0) {
ierrs[sel]<-ierrs[sel]+1
jerrs[19]<-length(sel)
}
df[sel,"Total_amount"]<-NA
# Chunk 80
Boxplot(df$Total_amount)
var_out<-calcQ(df$Total_amount)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
abline(h=150,col="blue",lwd=2)
llout<-which(df$Total_amount>150)
iouts[llout]<-iouts[llout]+1
jouts[19]<-length(llout)
df[llout,"Total_amount"]<-NA
# Chunk 81
missings_ranking_sortlist <- sort.list(mis1$mis_col, decreasing = TRUE)
for (j in missings_ranking_sortlist) {
print(paste(names(df)[j], " : ", mis1$mis_col$mis_x[j]))
}
# Chunk 82
errors_ranking_sortlist <- sort.list(jerrs, decreasing = TRUE)
for (j in errors_ranking_sortlist) {
if(!is.na(names(df)[j])) { print(paste(names(df)[j], " : ", jerrs[j])) }
}
# Chunk 83
errors_ranking_sortlist <- sort.list(jouts, decreasing = TRUE)
for (j in errors_ranking_sortlist) {
if(!is.na(names(df)[j])) print(paste(names(df)[j], " : ", jouts[j]))
}
# Chunk 84
barplot(table(imis),main="Missings per individual Barplot",col = "DarkSlateBlue")
# Chunk 85
barplot(table(ierrs),main="Errors per individual Barplot",col = "DarkSlateBlue")
# Chunk 86
# table(iouts)
barplot(table(iouts),main="Outliers per individual Barplot",col = "DarkSlateBlue")
# Chunk 87
total_missings <- 0; total_outliers <- 0; total_errors <- 0;
for (m in imis) {total_missings <- total_missings + m}
for (o in iouts) {total_outliers <- total_outliers + o}
for (e in ierrs) {total_errors <- total_errors + e}
# Chunk 88
total_missings
total_outliers
total_errors
# Chunk 89
library(missMDA)
# Chunk 90
df <- df[!is.na(df$Total_amount),]
vars_quantitatives<-names(df)[c(10:13,15,16,24:26)]
# Chunk 91
summary(df[,vars_quantitatives])
res.imputation<-imputePCA(df[,vars_quantitatives],ncp=5)
summary(res.imputation$completeObs)
# Chunk 92
ll<-which(res.imputation$completeObs[,"Trip_distance"] < 0)
res.imputation$completeObs[ll,"Trip_distance"] <- 1
ll<-which(res.imputation$completeObs[,"Trip_distance"] > 30)
res.imputation$completeObs[ll,"Trip_distance"] <- 30
# Chunk 93
ll<-which(res.imputation$completeObs[,"Fare_amount"] > 60)
res.imputation$completeObs[ll,"Fare_amount"] <- 60
# Chunk 94
ll<-which(res.imputation$completeObs[,"Tip_amount"] > 17)
res.imputation$completeObs[ll,"Tip_amount"] <- 17
# Chunk 95
df$TipIsGiven[(res.imputation$completeObs[,"Tip_amount"] > 0)] = "Yes"
df$TipIsGiven[(res.imputation$completeObs[,"Tip_amount"] == 0)] = "No"
df$TipIsGiven <- factor(df$TipIsGiven)
summary(df$TipIsGiven)
# Chunk 96
ll<-which(res.imputation$completeObs[,"tlenkm"] <= 1)
res.imputation$completeObs[ll,"tlenkm"] <- 1
ll<-which(res.imputation$completeObs[,"tlenkm"] > 48.28)
res.imputation$completeObs[ll,"tlenkm"] <- 48.28
# Chunk 97
ll<-which(res.imputation$completeObs[,"traveltime"] > 60)
res.imputation$completeObs[ll,"traveltime"] <- 60
# Chunk 98
ll<-which(res.imputation$completeObs[,"espeed"] < 3)
res.imputation$completeObs[ll,"espeed"] <- 3
ll<-which(res.imputation$completeObs[,"espeed"] > 55)
res.imputation$completeObs[ll,"espeed"] <- 55
# Chunk 99
df$passenger_groups[res.imputation$completeObs[,"Passenger_count"]  == 1] = "Single"
df$passenger_groups[res.imputation$completeObs[,"Passenger_count"] > 1 & res.imputation$completeObs[,"Passenger_count"] <= 2] = "Couple"
df$passenger_groups[res.imputation$completeObs[,"Passenger_count"] >= 3] = "Group"
df$passenger_groups <- factor(df$passenger_groups)
# Chunk 100
barplot(table(df$passenger_groups),main="passenger_groups Barplot",col = "DarkSlateBlue")
# Chunk 101
table(df$Extra)
df$Extra[df$Extra == 0] = 0
df$Extra[df$Extra > 0] = 1
df$Extra <- factor(df$Extra, labels =c("No","Yes"))
# Chunk 102
barplot(table(df$Extra),main="Extra Barplot",col = "DarkSlateBlue")
# Chunk 103
summary(df$MTA_tax)
df$MTA_tax <- factor(df$MTA_tax, labels =c("No","Yes"))
# Chunk 104
barplot(table(df$MTA_tax),main="MTA_tax Barplot",col = "DarkSlateBlue")
# Chunk 105
table(df$improvement_surcharge)
df$improvement_surcharge <- factor(df$improvement_surcharge)
df$improvement_surcharge <- factor(df$improvement_surcharge, labels =c("No","Yes"))
# Chunk 106
barplot(table(df$improvement_surcharge),main="improvement_surcharge Barplot",col = "DarkSlateBlue")
# Chunk 107
ll<-which(res.imputation$completeObs[,"Tolls_amount"] < 0)
res.imputation$completeObs[ll,"Tolls_amount"] <- 0
df$paidTolls[res.imputation$completeObs[,"Tolls_amount"] == 0] = "No"
df$paidTolls[res.imputation$completeObs[,"Tolls_amount"] > 0] = "Yes"
df$paidTolls <- factor(df$paidTolls)
# Chunk 108
#summary(res.imputation$completeObs)
df[,vars_quantitatives] <- res.imputation$completeObs
# Chunk 109
vars_categorical<-names(df)[c(1,4,5,20:21,23,29,35)]
summary(df[,vars_categorical])
res.input<-imputeMCA(df[,vars_categorical],ncp=10)
summary(res.input$completeObs)
# Chunk 110
df[,"VendorID"] <- res.input$completeObs[,"VendorID"]
df[,"Store_and_fwd_flag"] <- res.input$completeObs[,"Store_and_fwd_flag"]
df[,"RateCodeID"] <- res.input$completeObs[,"RateCodeID"]
df[,"Payment_type"] <- res.input$completeObs[,"Payment_type"]
df[,"Trip_type"] <- res.input$completeObs[,"Trip_type"]
df[,"period"] <- res.input$completeObs[,"period"]
df[,"Trip_distance_range"] <- res.input$completeObs[,"Trip_distance_range"]
df[,"passenger_groups"] <- res.input$completeObs[,"passenger_groups"]
# Chunk 111
library(mvoutlier)
library(FactoMineR)
res <- cor(df[,vars_quantitatives])
round(res, 2)
# Chunk 112
library(corrplot)
corrplot(res)
# Chunk 113
library(chemometrics)
multivariant_outliers <- Moutlier(df[, c(11:12, 19, 26)], quantile = 0.995)
multivariant_outliers$cutoff
par(mfrow=c(1,1))
plot(multivariant_outliers$md, multivariant_outliers$rd, type="n")
text(multivariant_outliers$md, multivariant_outliers$rd, labels=rownames(df[, c(11:12, 19, 26)]))
abline(col="red",lwd=2, h=qchisq(0.995, ncol(df[, c(11:12, 19, 26)])))
# Chunk 114
df[which(row.names(df)=="488540"), 1:35]
df[which(row.names(df)=="1180476"), 1:35]
# Chunk 115
library(FactoMineR)
summary(df$Total_amount)
# Chunk 116
vars_res<-names(df)[c(19,34)]
res.condes <- condes(df[, c(vars_res,vars_quantitatives, vars_categorical)],1)
# Chunk 117
res.condes$quanti # Global association to numeric variables
# Chunk 118
res.condes$quali # Global association to factors
# Chunk 119
res.condes$category # Partial association to significative levels in factors
# Chunk 120
res.catdes <- catdes(df[, c(vars_res,vars_quantitatives, vars_categorical)],2)
# Chunk 121
res.catdes$test.chi2
# Chunk 122
res.catdes$quanti.var
# Chunk 123
res.catdes$category
# Chunk 124
save.image("Taxi5000_del1.RData")
res.input$completeObs[,"passenger_groups"]
df[which(row.names(df)=="488540"), 1:35]
df[which(row.names(df)=="1180476"), 1:35]
setwd("~/Documents/uni/FIB-ADEI-LAB/finaldeliverable")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
if(!is.null(dev.list())) dev.off()  # Clear plots
rm(list=ls())                       # Clean workspace
# Chunk 3
setwd("~/Documents/uni/FIB-ADEI-LAB/finaldeliverable")
filepath<-"~/Documents/uni/FIB-ADEI-LAB/finaldeliverable"
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Chunk 4
load(paste0(filepath,"/Taxi5000_del1.RData"))
names(df)
# remove some columns
df$lpep_pickup_datetime <- NULL
df$Lpep_dropoff_datetime <- NULL
df$Store_and_fwd_flag <- NULL
df$Ehail_fee <- NULL
df$CashTips <- NULL
df$Sum_total_amount <- NULL
df$yearGt2015 <- NULL
names(df)
# imputation - ye know it has to be done in the first deliverable
library(missMDA)
long_lat<-names(df)[c(3:6)]
imp_long_lat<-imputePCA(df[,long_lat])
df[,long_lat]<-imp_long_lat$completeObs
names(df)
vars_res<-names(df)[c(15,27)]
vars_quantitatives<-names(df)[c(3:10,12,20:22)]
vars_categorical<-names(df)[c(1,2,16:17,19,25,28)]
vars_res
vars_res<-names(df)[c(15,27)]
vars_res
vars_res<-names(df)[c(15,26)]
vars_res
vars_quantitatives<-names(df)[c(3:10,12,20:22)]
vars_quantitatives
vars_categorical<-names(df)[c(1,2,16:17,19,25,28)]
vars_categorical
res.pca <- PCA(df[,c(1:10,12,13,15:17,19,21,22,25,26)],quanti.sup=c(3:6,13),quali.sup=c(1,2,14:16,19:20))
eigenvalues <- res.pca$eig
head(eigenvalues[, 1:3])
o
fviz_screeplot(
res.pca,
addlabels=TRUE,
ylim=c(0,50),
barfill="darkslateblue",
barcolor="darkslateblue",
linecolor = "skyblue1"
)
fviz_pca_ind(res.pca, col.ind="contrib", geom = "point") +
scale_color_gradient2(low="darkslateblue", mid="white",
high="red", midpoint=0.40)
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
# contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-10):length(rang)]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-10):length(rang)]]), 1:28]
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-10):length(rang)]]), 1:28])
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
rang<-order(res.pca$ind$coord[,1])
# contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
dxf[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1:10,(length(rang)-10):length(rang)]], 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1:10,(length(rang)-10):length(rang)]]), 1:28]
summary(df[which(row.names(df) %in% row.names(df)[rang[1:10]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-10):length(rang)]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[1:10]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-10):length(rang)]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[1:10]]), 1:28])
rang<-order(res.pca$ind$coord[,1])
# contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
summary(df[which(row.names(df) %in% row.names(df)[rang[1:10]]), 1:28])
rang<-order(res.pca$ind$coord[,1])
a
rang<-order(res.pca$ind$coord[,1])
# contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
summary(df[which(row.names(df) %in% row.names(df)[rang[1:10]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-10):length(rang)]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-9):length(rang)]]), 1:28])
# contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-9):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-9):length(rang)]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-9):length(rang)]]), 1:28])
rang<-order(res.pca$ind$coord[,2])
# contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
# contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-9):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
summary(df[which(row.names(df) %in% row.names(df)[rang[1:10]]), 1:28])
summary(df[which(row.names(df) %in% row.names(df)[rang[(length(rang)-9):length(rang)]]), 1:28])
res.des <- dimdesc(res.pca)
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 1,
top = 5)
res.des$Dim.1
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 2,
top = 5)
res.des$Dim.2
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 3,
top = 5)
res.des$Dim.3
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],pch=19,col="grey30")
points(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],pch=15,col="cadetblue1")
lines(res.pca$quali.sup$coord[3:4,1],res.pca$quali.sup$coord[3:4,2],lwd=2,lty=2,col="coral")
text(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],labels=names(res.pca$quali.sup$coord[,1]),col="cadetblue1",cex=0.5)
res.hcpc <- HCPC(res.pca,nb.clust = 5, order = TRUE)
table(res.hcpc$data.clust$clust)
barplot(table(res.hcpc$data.clust$clust), col="darkslateblue", border="darkslateblue", main="[hierarchical] #observations/cluster")
names(res.hcpc$desc.var)
res.hcpc$desc.var$test.chi2   # categorical variables which characterizes the clusters
res.hcpc$desc.var$category    # description of each cluster by the categories
res.hcpc$desc.var$quanti.var  # quantitative variables which characterizes the clusters
res.hcpc$desc.var$quanti      # description of each cluster by the quantitative variables
res.hcpc$desc.ind$para  # representative individuals of each cluster
res.hcpc$desc.ind$dist  # individuals distant from each cluster
# characteristic individuals
para1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]]))
dist1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[1]]))
para2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[2]]))
dist2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[2]]))
para3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[3]]))
dist3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[3]]))
para4<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[4]]))
dist4<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[4]]))
para5<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[5]]))
dist5<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[5]]))
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],col="grey50",cex=0.5,pch=16)
points(res.pca$ind$coord[para1,1],res.pca$ind$coord[para1,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist1,1],res.pca$ind$coord[dist1,2],col="chartreuse3",cex=1,pch=16)
points(res.pca$ind$coord[para2,1],res.pca$ind$coord[para2,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist2,1],res.pca$ind$coord[dist2,2],col="darkorchid3",cex=1,pch=16)
points(res.pca$ind$coord[para3,1],res.pca$ind$coord[para3,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist3,1],res.pca$ind$coord[dist3,2],col="firebrick3",cex=1,pch=16)
points(res.pca$ind$coord[para4,1],res.pca$ind$coord[para4,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist4,1],res.pca$ind$coord[dist4,2],col="palevioletred3",cex=1,pch=16)
points(res.pca$ind$coord[para5,1],res.pca$ind$coord[para5,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist5,1],res.pca$ind$coord[dist5,2],col="royalblue1",cex=1,pch=16)
para1
summary(df[which(row.names(df) %in% para1)], 1:28])
summary(df[which(row.names(df) %in% para1), 1:28])
# characteristic individuals
para1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]]))
para1
summary(df[para1])
summary(df[,para1])
summary(which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]])))
summary(which(names(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]])))
summary(df[which(row.names(df) %in% para1]), 1:28])
summary(df[which(row.names(df) %in% para1), 1:28])
summary(df[which(row.names(df) %in% dist1), 1:28])
# ( between sum of squares / total sum of squares ) * 100
((res.hcpc$call$t$within[1]-res.hcpc$call$t$within[5])/res.hcpc$call$t$within[1])*100
((res.hcpc$call$t$within[1]-res.hcpc$call$t$within[18])/res.hcpc$call$t$within[1])*100
((res.hcpc$call$t$within[1]-res.hcpc$call$t$within[17])/res.hcpc$call$t$within[1])*100
((res.hcpc$call$t$within[1]-res.hcpc$call$t$within[18])/res.hcpc$call$t$within[1])*100
res.hcpc$call$t$inert.gain[1:5]
df$hcpck<-res.hcpc$data.clust$clust
res.pca <- PCA(df[,c(1:10,12,13,15:17,19,21,22,25,27)],quanti.sup=c(3:6,13),quali.sup=c(1,2,14:16,19:20),ncp=5,graph=FALSE)
ppcc<-res.pca$ind$coord[,1:3] # 3 components principals (kaiser)
dim(ppcc)
library("factoextra")
fviz_nbclust(ppcc, kmeans, method = "gap_stat") #
dist<-dist(ppcc)  # coordenates are real - Euclidean metric
kc<-kmeans(dist, 5, iter.max=30, trace=TRUE) #caclulate the distances, it turns into a matrix
dist<-dist(ppcc)  # coordenates are real - Euclidean metric
kc<-kmeans(dist,5,iter.max=30,trace=TRUE) #caclulate the distances, it turns into a matrix
df$claKM<-0
df$claKM<-kc$cluster
df$claKM<-factor(df$claKM)
barplot(table(df$claKM),col="darkslateblue",border="darkslateblue",main="[k-means]#observations/cluster")
100*(kc$betweenss/kc$totss)
dim(df)
res.cat <-catdes(df,30)
res.cat
names(df)
res.cat < -catdes(df,30)
res.cat <- catdes(df,30)
res.cat
table(df$hcpck,df$claKM)
# we must do a relabel
df$hcpck<-factor(df$hcpck,labels=c("kHP-1","kHP-2","kHP-3","kHP-4","kHP-5"))
df$claKM<-factor(df$claKM,levels=c(3,5,2,1,4),labels=c("kKM-3","kKM-5","kKM-2","kKM-1","kKM-4"))
tt<-table(df$hcpck,df$claKM); tt
100*sum(diag(tt)/sum(tt))
df$f.cost[df$Total_amount<=8] = "[0,8]"
df$f.cost[(df$Total_amount>8) & (df$Total_amount<=11)] = "(8,11]"
df$f.cost[(df$Total_amount>11) & (df$Total_amount<=18)] = "(11,18]"
df$f.cost[(df$Total_amount>18) & (df$Total_amount<= 30)] = "(18,30]"
df$f.cost[(df$Total_amount>30) & (df$Total_amount<= 50)] = "(30,50]"
df$f.cost[df$Total_amount>50] = "(50,129)"
df$f.cost<-factor(df$f.cost)
table(df$f.cost)
tt<-table(df[,c("f.cost","passenger_groups")]);tt
chisq.test(tt,  simulate.p.value = TRUE) #to see if the rows and columns are independents. H0: Rows and columns are independent
res.ca <- CA(tt)
summary(res.ca)
df$f.tt[df$traveltime<=5] = "[0,5]"
df$f.tt[(df$traveltime>5) & (df$traveltime<=10)] = "(5,10]"
df$f.tt[(df$traveltime>10) & (df$traveltime<=15)] = "(10,15]"
df$f.tt[(df$traveltime>15) & (df$traveltime<= 20)] = "(15,20]"
df$f.tt[(df$traveltime>20) & (df$traveltime<= 70)] = "(20,60]"
df$f.tt<-factor(df$f.tt)
table(df$f.tt)
new_f.cost <- ordered(df$f.cost, levels= c("[0,8]", "(8,11]", "(11,18]", "(18,30]", "(30,50]","(50,129)"))
new_f.travel_time <- ordered(df$f.tt, levels= c("[0,5]", "(5,10]", "(10,15]", "(15,20]","(20,60]"))
tt<-table(new_f.cost,new_f.travel_time);tt
chisq.test(tt) #to see if the rows and columns are independents. H0: Rows and columns are independent
res.ca <- CA(tt)
plot(res.ca$row$coord[,1],res.ca$row$coord[,2],pch=19,col="blue",xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),xlab="Axis 1",ylab="Axis 2", main="CA f.cost vs f.tt")
points(res.ca$col$coord[,1],res.ca$col$coord[,2],lwd=2,col="red")
text(res.ca$row$coord[,1],res.ca$row$coord[,2],lwd=2,col="blue",labels=levels(df$f.cost))
text(res.ca$col$coord[,1],res.ca$col$coord[,2],lwd=2,col="red",labels=levels(df$f.tt))
lines(res.ca$row$coord[,1],res.ca$row$coord[,2],lwd=2,col="blue")
lines(res.ca$col$coord[,1],res.ca$col$coord[,2],lwd=2,col="red")
(
(
summary(res.ca)
)
)
mean(res.ca$eig[,1])
library(FactoMineR)
library(factoextra)
names(df)
vars_con <- names(df)[c(10,11,14,15,18,20)]; length(vars_con)
vars_dis <- names(df)[c(1,2,16,17,19,25,16,27,28,29,30,31,32,33,34,37,38)]; length(vars_dis)
res.mca <- MCA(
df[,c(vars_dis,vars_con)],
quanti.sup=c(18:23),
quali.sup=c(10,16),
graph=FALSE
)
vars_con
names(df)
summary(df)
vars_con <- names(df)[c(3,4,5,6,10,12,13)]; length(vars_con)
vars_con
summary(df[,vars_con])
length(names(df))
vars_con <- names(df)[c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32)]; length(vars_con)
summary(df[,vars_con])
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32)]; length(vars_con)
summary(df[,vars_con])
vars_dis <- names(df)[c(1,2)]; length(vars_dis); summary(df[,vars_dis])
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32)]; length(vars_con); summary(df[,vars_con])
names(df)
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32)]; length(vars_con); summary(df[,vars_con])
vars_dis <- names(df)[c(1,2,11,14,16)]; length(vars_dis); summary(df[,vars_dis])
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,12,13,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32)]; length(vars_con); summary(df[,vars_con])
names(df)
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,12,13,15,18,20,21,22,23,24,25,26,27,28,29,30,31,32)]; length(vars_con); summary(df[,vars_con])
vars_dis <- names(df)[c(1,2,11,14,16,17,19)]; length(vars_dis); summary(df[,vars_dis])
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,12,13,15,18,20,21,22,23,24,25,26,27,28,29,30,31,32)]; length(vars_con); summary(df[,vars_con])
names(df)
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,12,13,15,18,20,21,22,27,28,29,30,31,32)]; length(vars_con); summary(df[,vars_con])
names(df)
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,12,13,15,18,20,21,22)]; length(vars_con); summary(df[,vars_con])
vars_dis <- names(df)[c(1,2,11,14,16,17,19,25,26,27,28,31,32)]; length(vars_dis); summary(df[,vars_dis])
vars_con
vars_dis
length(vars_dis)
length(vars_con);
vars_dis <- names(df)[c(1,2,11,14,16,17,19,25,26,27,28,31,32)]; length(vars_dis); summary(df[,vars_dis])
vars_con <- names(df)[c(3,4,5,6,7,8,9,10,12,13,15,18,20,21,22)]; length(vars_con); summary(df[,vars_con])
res.mca <- MCA(
df[,c(vars_dis,vars_con)],
quanti.sup=c(14:28),
quali.sup=c(9,10),
graph=FALSE
)
fviz_mca_var(res.mca, choice="quanti.sup", repel=TRUE, ggtheme=theme_minimal())
vars_con
vars_dis <- names(df)[c(1,2,11,14,16,17,19,25,26,27,28,31,32)]; length(vars_dis); summary(df[,vars_dis])
vars_con <- names(df)[c(7,8,9,10,12,13,15,18,20,21,22)]; length(vars_con); summary(df[,vars_con])
vars_con <- names(df)[c(7,8,9,10,12,13,15,18,20,21,22)]; length(vars_con); summary(df[,vars_con])
res.mca <- MCA(
df[,c(vars_dis,vars_con)],
quanti.sup=c(14:24),
quali.sup=c(9,10),
graph=FALSE
)
fviz_mca_var(res.mca, choice="quanti.sup", repel=TRUE, ggtheme=theme_minimal())
fviz_mca_ind(
res.mca,
geom=c("point"),
col.ind="darkslateblue"
)
length(df)
