linecolor = "skyblue1"
)
# Chunk 10
# head(res.pca$ind$contrib) # contribition of individuals to the princial components
fviz_pca_ind(res.pca, col.ind="contrib", geom = "point") +
scale_color_gradient2(low="darkslateblue", mid="white",
high="red", midpoint=0.40)
# Chunk 11
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
# Chunk 12
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
# Chunk 13
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
# Chunk 14
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
# Chunk 15
res.des <- dimdesc(res.pca)
# Chunk 16
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 1,
top = 5)
res.des$Dim.1
# Chunk 17
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 2,
top = 5)
res.des$Dim.2
# Chunk 18
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 3,
top = 5)
res.des$Dim.3
# Chunk 19
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],pch=19,col="grey30") # draw all the individuals in grey
points(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],pch=15,col="cadetblue1") # points associated with the categories gravitatorial centers
lines(res.pca$quali.sup$coord[3:4,1],res.pca$quali.sup$coord[3:4,2],lwd=2,lty=2,col="coral") # draw a line that joins the categories that we want to take a look at
text(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],labels=names(res.pca$quali.sup$coord[,1]),col="cadetblue1",cex=0.5) #add the names of the different categories
# Chunk 20
res.hcpc <- HCPC(res.pca,nb.clust = 5, order = TRUE)
# Chunk 21
table(res.hcpc$data.clust$clust)
barplot(table(res.hcpc$data.clust$clust), col="darkslateblue", border="darkslateblue", main="[hierarchical] #observations/cluster")
# Chunk 22
names(res.hcpc$desc.var)
res.hcpc$desc.var$test.chi2   # categorical variables which characterizes the clusters
# Chunk 23
res.hcpc$desc.var$category    # description of each cluster by the categories
# Chunk 24
res.hcpc$desc.var$quanti.var  # quantitative variables which characterizes the clusters
# Chunk 25
res.hcpc$desc.var$quanti      # description of each cluster by the quantitative variables
# Chunk 26
res.hcpc$desc.ind$para  # representative individuals of each cluster
# Chunk 27
res.hcpc$desc.ind$dist  # individuals distant from each cluster
# Chunk 28
# characteristic individuals
para1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]]))
dist1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[1]]))
para2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[2]]))
dist2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[2]]))
para3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[3]]))
dist3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[3]]))
para4<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[4]]))
dist4<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[4]]))
para5<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[5]]))
dist5<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[5]]))
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],col="grey50",cex=0.5,pch=16)
points(res.pca$ind$coord[para1,1],res.pca$ind$coord[para1,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist1,1],res.pca$ind$coord[dist1,2],col="chartreuse3",cex=1,pch=16)
points(res.pca$ind$coord[para2,1],res.pca$ind$coord[para2,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist2,1],res.pca$ind$coord[dist2,2],col="darkorchid3",cex=1,pch=16)
points(res.pca$ind$coord[para3,1],res.pca$ind$coord[para3,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist3,1],res.pca$ind$coord[dist3,2],col="firebrick3",cex=1,pch=16)
points(res.pca$ind$coord[para4,1],res.pca$ind$coord[para4,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist4,1],res.pca$ind$coord[dist4,2],col="palevioletred3",cex=1,pch=16)
points(res.pca$ind$coord[para5,1],res.pca$ind$coord[para5,2],col="blue",cex=1,pch=16)
points(res.pca$ind$coord[dist5,1],res.pca$ind$coord[dist5,2],col="royalblue1",cex=1,pch=16)
# Chunk 29
# ( between sum of squares / total sum of squares ) * 100
((res.hcpc$call$t$within[1]-res.hcpc$call$t$within[5])/res.hcpc$call$t$within[1])*100
# Chunk 30
((res.hcpc$call$t$within[1]-res.hcpc$call$t$within[18])/res.hcpc$call$t$within[1])*100
# Chunk 31
res.hcpc$call$t$inert.gain[1:5]
df$hcpck<-res.hcpc$data.clust$clust
# Chunk 32
res.pca <- PCA(df[,c(1:10,12,13,15:17,19,21,22,25,27)],quanti.sup=c(3:6,13),quali.sup=c(1,2,14:16,19:20),ncp=5,graph=FALSE)
ppcc<-res.pca$ind$coord[,1:3] # 3 components principals (kaiser)
dim(ppcc)
# Chunk 33
library("factoextra")
fviz_nbclust(ppcc, kmeans, method = "gap_stat") # !!!!Descomentar pel deliverable, triga molt.
# Chunk 34
dist<-dist(ppcc)  # coordenates are real - Euclidean metric
kc<-kmeans(dist, 5, iter.max=30, trace=TRUE) #caclulate the distances, it turns into a matrix
# Chunk 35
df$claKM<-0
df$claKM<-kc$cluster
df$claKM<-factor(df$claKM)
barplot(table(df$claKM),col="darkslateblue",border="darkslateblue",main="[k-means]#observations/cluster")
# Chunk 36
100*(kc$betweenss/kc$totss)
# Chunk 37
dim(df)
res.cat <-catdes(df,30)
res.cat
# Chunk 38
table(df$hcpck,df$claKM)
# we must do a relabel
df$hcpck<-factor(df$hcpck,labels=c("kHP-1","kHP-2","kHP-3","kHP-4","kHP-5"))
df$claKM<-factor(df$claKM,levels=c(3,5,2,1,4),labels=c("kKM-3","kKM-5","kKM-2","kKM-1","kKM-4"))
tt<-table(df$hcpck,df$claKM); tt
100*sum(diag(tt)/sum(tt))
# Chunk 39
df$f.cost[df$Total_amount<=8] = "[0,8]"
df$f.cost[(df$Total_amount>8) & (df$Total_amount<=11)] = "(8,11]"
df$f.cost[(df$Total_amount>11) & (df$Total_amount<=18)] = "(11,18]"
df$f.cost[(df$Total_amount>18) & (df$Total_amount<= 30)] = "(18,30]"
df$f.cost[(df$Total_amount>30) & (df$Total_amount<= 50)] = "(30,50]"
df$f.cost[df$Total_amount>50] = "(50,129)"
df$f.cost<-factor(df$f.cost)
table(df$f.cost)
# Chunk 40
tt<-table(df[,c("f.cost","passenger_groups")]);tt
chisq.test(tt,  simulate.p.value = TRUE) #to see if the rows and columns are independents. H0: Rows and columns are independent
# Chunk 41
res.ca <- CA(tt)
# Chunk 42
summary(res.ca)
# Chunk 43
df$f.tt[df$traveltime<=5] = "[0,5]"
df$f.tt[(df$traveltime>5) & (df$traveltime<=10)] = "(5,10]"
df$f.tt[(df$traveltime>10) & (df$traveltime<=15)] = "(10,15]"
df$f.tt[(df$traveltime>15) & (df$traveltime<= 20)] = "(15,20]"
df$f.tt[(df$traveltime>20) & (df$traveltime<= 50)] = "(20,50]"
df$f.tt<-factor(df$f.tt)
table(df$f.tt)
# Chunk 44
tt<-table(df[,c("f.cost","f.tt")]);tt
chisq.test(tt) #to see if the rows and columns are independents. H0: Rows and columns are independent
# Chunk 45
res.ca <- CA(tt)
plot(res.ca$row$coord[,1],res.ca$row$coord[,2],pch=19,col="blue",xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),xlab="Axis 1",ylab="Axis 2", main="CA f.cost vs f.tt")
points(res.ca$col$coord[,1],res.ca$col$coord[,2],lwd=2,col="red")
text(res.ca$row$coord[,1],res.ca$row$coord[,2],lwd=2,col="blue",labels=levels(df$f.cost))
text(res.ca$col$coord[,1],res.ca$col$coord[,2],lwd=2,col="red",labels=levels(df$f.tt))
lines(res.ca$row$coord[,1],res.ca$row$coord[,2],lwd=2,col="blue")
lines(res.ca$col$coord[,1],res.ca$col$coord[,2],lwd=2,col="red")
# Chunk 46
summary(res.ca)
# Chunk 47
mean(res.ca$eig[,1])
# Chunk 48
library(FactoMineR)
library(factoextra)
# Chunk 49
names(df[,c(1:2,15:17,19,25,27:28,31)])
res.mca <- MCA(
df[,c(1:2,15:17,19,25,27:28,31)],
quanti.sup=c(3),
quali.sup=c(8,10),
graph=FALSE
)
# Chunk 50
fviz_mca_var(res.mca, choice="quanti.sup", repel=TRUE, ggtheme=theme_minimal())
# Chunk 51
fviz_mca_ind(
res.mca,
geom=c("point"),
col.ind="darkslateblue"
)
# Chunk 52
mean(res.mca$eig[,1])
head(get_eigenvalue(res.mca), 10)
# Chunk 53
fviz_screeplot(
res.mca,
addlabels=TRUE,
ylim=c(0,20),
barfill="darkslateblue",
barcolor="darkslateblue",
linecolor="skyblue1"
)
# Chunk 54
fviz_mca_ind(
res.mca,
geom=c("point"),
col.ind="contrib",
gradient.cols=c("darkslateblue", "red")
)
# Chunk 55
fviz_mca_ind(res.mca, label="none", habillage="VendorID", palette=c("darkslateblue", "red"))
fviz_mca_ind(res.mca, label="none", habillage="RateCodeID", palette=c("darkslateblue", "red"))
fviz_mca_ind(res.mca, label="none", habillage="Trip_type", palette=c("darkslateblue", "red"))
# Chunk 56
fviz_mca_var(res.mca, choice="mca.cor", repel=TRUE)
# Chunk 57
fviz_mca_var(res.mca, repel=TRUE)
# Chunk 58
res.desc <- dimdesc(res.mca, axes = c(1,2))
# Chunk 59
res.desc[[1]]
# Chunk 60
res.desc[[2]]
# Chunk 61
res.mca_all <- MCA(
df[,c(1:32)],
quanti.sup=c(3:10, 12:13, 15, 18, 20:22),
quali.sup=c(27,31),
graph=FALSE
)
# Chunk 62
res.desc <- dimdesc(res.mca_all, axes = c(1,2))
# Chunk 63
res.desc[[1]]
# Chunk 64
res.desc[[2]]
# Chunk 65
res.hcpcMCA <- HCPC(res.mca,nb.clust = 5, order = TRUE)
# Chunk 66
table(res.hcpcMCA$data.clust$clust)
barplot(table(res.hcpcMCA$data.clust$clust), col="darkslateblue", border="darkslateblue", main="[hierarchical from mca] #observations/cluster")
# Chunk 67
names(res.hcpcMCA$desc.var)
res.hcpcMCA$desc.var$test.chi2   # categorical variables which characterizes the clusters
# Chunk 68
res.hcpcMCA$desc.var$category    # description of each cluster by the categories
# Chunk 69
res.hcpcMCA$desc.var$quanti.var  # quantitative variables which characterizes the clusters
# Chunk 70
res.hcpcMCA$desc.var$quanti      # description of each cluster by the quantitative variables
# Chunk 71
# ( between sum of squares / total sum of squares ) * 100
((res.hcpcMCA$call$t$within[1]-res.hcpcMCA$call$t$within[5])/res.hcpcMCA$call$t$within[1])*100
# Chunk 72
((res.hcpcMCA$call$t$within[1]-res.hcpcMCA$call$t$within[13])/res.hcpcMCA$call$t$within[1])*100
# Chunk 73
res.hcpcMCA$desc.ind$para  # representative individuals of each cluster
# Chunk 74
res.hcpcMCA$desc.ind$dist  # individuals distant from each cluster
# Chunk 75
# characteristic individuals
para1<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$para[[1]]))
dist1<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$dist[[1]]))
para2<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$para[[2]]))
dist2<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$dist[[2]]))
para3<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$para[[3]]))
dist3<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$dist[[3]]))
para4<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$para[[4]]))
dist4<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$dist[[4]]))
para5<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$para[[5]]))
dist5<-which(rownames(res.mca$ind$coord)%in%names(res.hcpcMCA$desc.ind$dist[[5]]))
plot(res.mca$ind$coord[,1],res.mca$ind$coord[,2],col="grey50",cex=0.5,pch=16)
points(res.mca$ind$coord[para1,1],res.mca$ind$coord[para1,2],col="blue",cex=1,pch=16)
points(res.mca$ind$coord[dist1,1],res.mca$ind$coord[dist1,2],col="chartreuse3",cex=1,pch=16)
points(res.mca$ind$coord[para2,1],res.mca$ind$coord[para2,2],col="blue",cex=1,pch=16)
points(res.mca$ind$coord[dist2,1],res.mca$ind$coord[dist2,2],col="darkorchid3",cex=1,pch=16)
points(res.mca$ind$coord[para3,1],res.mca$ind$coord[para3,2],col="blue",cex=1,pch=16)
points(res.mca$ind$coord[dist3,1],res.mca$ind$coord[dist3,2],col="firebrick3",cex=1,pch=16)
points(res.mca$ind$coord[para4,1],res.mca$ind$coord[para4,2],col="blue",cex=1,pch=16)
points(res.mca$ind$coord[dist4,1],res.mca$ind$coord[dist4,2],col="palevioletred3",cex=1,pch=16)
points(res.mca$ind$coord[para5,1],res.mca$ind$coord[para5,2],col="blue",cex=1,pch=16)
points(res.mca$ind$coord[dist5,1],res.mca$ind$coord[dist5,2],col="royalblue1",cex=1,pch=16)
# Chunk 76
df$hcpckMCA<-res.hcpcMCA$data.clust$clust
# With Hierarchical Clustering (PCA)
table(df$hcpck,df$hcpckMCA)
df$hcpckMCA_hcpck<-factor(
df$hcpckMCA,
levels=c(4,3,2,1,5),
labels=c("kHPmca-4","kHPmca-3","kHPmca-2","kHPmca-1","kHPmca-5")
)
tt1<-table(df$hcpck,df$hcpckMCA_hcpck); tt1
100*sum(diag(tt1)/sum(tt1))
# Chunk 77
# With k-means (PCA)
table(df$claKM, df$hcpckMCA)
df$hcpckMCA_claKM<-factor(
df$hcpckMCA,
levels=c(2,3,1,4,5),
labels=c("kHPmca-2","kHPmca-3","kHPmca-1","kHPmca-4","kHPmca-5")
)
tt2<-table(df$claKM,df$hcpckMCA_claKM); tt
100*sum(diag(tt2)/sum(tt2))
# Chunk 78
# res.hcpc$desc.var$quanti.var  # quantitative variables which characterizes the clusters
# #                          Eta2       P-value
# # Total_amount      0.539522699  0.000000e+00
# Chunk 79
# res.cat <-catdes(df,30)
# res.cat
# # Link between the cluster variable and the quantitative variables
# # ================================================================
# #                          Eta2       P-value
# # Total_amount      0.688303660  0.000000e+00
# Chunk 80
# # res.hcpcMCA$desc.var$quanti.var  # quantitative variables which characterizes the clusters
# #                    Eta2      P-value
# # Total_amount 0.03950465 3.518655e-39
# Chunk 81
# res.hcpc$desc.var$category    # description of each cluster by the categories
# # $`1`
# #                                   Cla/Mod      Mod/Cla    Global
# # TipIsGiven=No                  43.6502429  65.18134715 62.340472
# # TipIsGiven=Yes                 38.5985066  34.81865285 37.659528
# #
# # $`2`
# #                                  Cla/Mod   Mod/Cla    Global
# # TipIsGiven=No                  38.965996 68.727050 62.340472
# # TipIsGiven=Yes                 29.350948 31.272950 37.659528
# #
# # $`3`
# #                             Cla/Mod    Mod/Cla    Global
# # nothing to see here
# #
# # $`4`
# #                                   Cla/Mod   Mod/Cla    Global
# # TipIsGiven=Yes                 24.6984492 56.728232 37.659528
# # TipIsGiven=No                  11.3809854 43.271768 62.340472
# #
# # $`5`
# #                                   Cla/Mod   Mod/Cla    Global
# # TipIsGiven=Yes                 1.60827111 71.794872 37.659528
# # TipIsGiven=No                  0.38167939 28.205128 62.340472
# Chunk 82
# res.cat <-catdes(df,30)
# res.cat
# #
# # Description of each cluster by the categories
# # =============================================
# # $`1`
# #                                   Cla/Mod    Mod/Cla    Global
# # TipIsGiven=Yes                  23.721999 49.6991576 37.659528
# # TipIsGiven=No                   14.503817 50.3008424 62.340472
# #
# # $`2`
# #                                    Cla/Mod    Mod/Cla    Global
# # TipIsGiven=Yes                  15.6232051 55.9670782 37.659528
# # TipIsGiven=No                    7.4253990 44.0329218 62.340472
# #
# # $`3`
# #                                    Cla/Mod     Mod/Cla     Global
# # TipIsGiven=No                   19.5697432  66.8246445 62.3404716
# # TipIsGiven=Yes                  16.0827111  33.1753555 37.6595284
# #
# # $`4`
# #                                     Cla/Mod    Mod/Cla     Global
# # TipIsGiven=Yes                    3.9058013 62.3853211 37.6595284
# # TipIsGiven=No                     1.4226232 37.6146789 62.3404716
# #
# # $`5`
# #                                   Cla/Mod     Mod/Cla     Global
# # TipIsGiven=No                   57.078418  69.9107522 62.3404716
# # TipIsGiven=Yes                  40.666284  30.0892478 37.6595284
# Chunk 83
# res.hcpcMCA$desc.var$category    # description of each cluster by the categories
# # $`1`
# #                                Cla/Mod   Mod/Cla     Global
# # TipIsGiven=No                1.0409438 100.00000 62.3404716
# # TipIsGiven=Yes               0.0000000   0.00000 37.6595284
# #
# # $`2`
# #                                  Cla/Mod     Mod/Cla     Global
# # nothing to see here
# #
# # $`3`
# #                                  Cla/Mod     Mod/Cla     Global
# # TipIsGiven=No                  32.616239  65.5966504 62.3404716
# # TipIsGiven=Yes                 28.317059  34.4033496 37.6595284
# #
# # $`4`
# #                                  Cla/Mod     Mod/Cla     Global
# # TipIsGiven=Yes                 46.984492  41.9057377 37.6595284
# # TipIsGiven=No                  39.347675  58.0942623 62.3404716
# #
# # $`5`
# #                                     Cla/Mod    Mod/Cla    Global
# # TipIsGiven=No                    3.33102012 80.0000000 62.340472
# # TipIsGiven=Yes                   1.37851809 20.0000000 37.659528
# Chunk 84
save.image("Taxi5000_del2.RData")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
if(!is.null(dev.list())) dev.off()  # Clear plots
rm(list=ls())                       # Clean workspace
# Chunk 3
setwd("~/Github Repositories/FIB-ADEI-LAB/deliverable3")
filepath<-"~/Github Repositories/FIB-ADEI-LAB/deliverable3"
#setwd("C:/Users/Claudia Sánchez/Desktop/FIB/TARDOR 2020-2021/ADEI/DELIVERABLE1/FIB-ADEI-LAB/deliverable2")
#filepath<-"C:/Users/Claudia Sánchez/Desktop/FIB/TARDOR 2020-2021/ADEI/DELIVERABLE1/FIB-ADEI-LAB/deliverable2"
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Chunk 4
load(paste0(filepath,"/Taxi5000_del1.RData"))
# Chunk 5
# remove some columns
#names(df)
df$lpep_pickup_datetime <- NULL
df$Lpep_dropoff_datetime <- NULL
df$Store_and_fwd_flag <- NULL
df$Ehail_fee <- NULL
df$CashTips <- NULL
df$Sum_total_amount <- NULL
df$yearGt2015 <- NULL
# imputation
library(missMDA)
long_lat<-names(df)[c(3:6)]
imp_long_lat<-imputePCA(df[,long_lat])
df[,long_lat]<-imp_long_lat$completeObs
# Chunk 6
names(df)
vars_res<-names(df)[c(15,27)]
vars_quantitatives<-names(df)[c(3:10,12,20:22)]
vars_categorical<-names(df)[c(1,2,16:17,19,25,28)]
# Chunk 7
library(FactoMineR)
res.pca <- PCA(df[,c(1:10,12,13,15:17,19,21,22,25,27)],quanti.sup=c(3:6,13),quali.sup=c(1,2,14:16,19:20))
#plot.PCA(res.pca,choix=c("var"), invisible=c("quanti.sup"))
#plot.PCA(res.pca,choix=c("var"), invisible=c("var"))
#plot.PCA(res.pca,choix=c("ind"), invisible=c("ind"))
# Chunk 8
eigenvalues <- res.pca$eig
head(eigenvalues[, 1:3])
# Chunk 9
fviz_screeplot(
res.pca,
addlabels=TRUE,
ylim=c(0,50),
barfill="darkslateblue",
barcolor="darkslateblue",
linecolor = "skyblue1"
)
# Chunk 10
# head(res.pca$ind$contrib) # contribition of individuals to the princial components
fviz_pca_ind(res.pca, col.ind="contrib", geom = "point") +
scale_color_gradient2(low="darkslateblue", mid="white",
high="red", midpoint=0.40)
# Chunk 11
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
# Chunk 12
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
# Chunk 13
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
# Chunk 14
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:28]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:28]
# Chunk 15
res.des <- dimdesc(res.pca)
# Chunk 16
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 1,
top = 5)
res.des$Dim.1
# Chunk 17
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 2,
top = 5)
res.des$Dim.2
# Chunk 18
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 3,
top = 5)
res.des$Dim.3
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],pch=19,col="grey30") # draw all the individuals in grey
points(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],pch=15,col="cadetblue1") # points associated with the categories gravitatorial centers
lines(res.pca$quali.sup$coord[3:4,1],res.pca$quali.sup$coord[3:4,2],lwd=2,lty=2,col="coral") # draw a line that joins the categories that we want to take a look at
text(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],labels=names(res.pca$quali.sup$coord[,1]),col="cadetblue1",cex=0.5) #add the names of the different categories
